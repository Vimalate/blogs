(window.webpackJsonp=window.webpackJsonp||[]).push([[62],{730:function(e,t,a){"use strict";a.r(t);var s=a(2),r=Object(s.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h2",{attrs:{id:"前置知识"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#前置知识"}},[e._v("#")]),e._v(" 前置知识")]),e._v(" "),t("p",[e._v("git 在我们开发中几乎每天都要接触到，但是大多数时候却仅仅是熟悉常用的几个 git 命令，此次算是总结和记录一些 git 命令的使用，也进一步的了解 git及怎样在工作开发中正确使用git版本管理 。")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://i.loli.net/2020/06/06/UpLvKRZwyW1eG9o.jpg",alt:""}})]),e._v(" "),t("p",[t("strong",[e._v("仓库")])]),e._v(" "),t("ol",[t("li",[e._v("Remote: 远程主仓库；")]),e._v(" "),t("li",[e._v("Repository： 本地仓库；")]),e._v(" "),t("li",[e._v("Index： Git追踪树,暂存区；")]),e._v(" "),t("li",[e._v("workspace： 本地工作区（即你编辑器的代码）")])]),e._v(" "),t("h2",{attrs:{id:"git-命名规范"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#git-命名规范"}},[e._v("#")]),e._v(" git 命名规范")]),e._v(" "),t("p",[e._v("一个项目的分支，一般包括主干 master 和 开发分支 dev，以及若干临时分支")]),e._v(" "),t("p",[t("strong",[e._v("分支命名规范")])]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("分支:\t\t命名:\t\t说明:\n \n主分支\t\tmaster\t\t主分支，所有提供给用户使用的正式版本，都在这个主分支上发布\n开发分支\t\tdev \t\t开发分支，永远是功能最新最全的分支\n功能分支\t\tfeature-* (分支功能/分支名)\t新功能分支，某个功能点正在开发阶段,一般开发新功能时，feature 分支都是基于 develop 分支下创建的\n发布版本\t\trelease-*\t发布定期要上线的功能，发布分支是从develop分支上面分出来的，预发布结束以后，必须合并进develop和master分支\n修复分支\t\tbug-*\t\t修复线上代码的 bug\n验证分支\t\tdemo-*      技术调研，完成后删除该分支\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br")])]),t("p",[t("strong",[e._v("commit 命名规范")])]),e._v(" "),t("ul",[t("li",[e._v("feat:一个新功能")]),e._v(" "),t("li",[e._v("fix：bug修复")]),e._v(" "),t("li",[e._v("docs：仅仅修改了文档，比如 README, CHANGELOG, CONTRIBUTE 等")]),e._v(" "),t("li",[e._v("style：不影响代码逻辑的修改，比如空格、格式缩进、删除分号等")]),e._v(" "),t("li",[e._v("refactor：代码重构")]),e._v(" "),t("li",[e._v("perf：提升性能的改动")]),e._v(" "),t("li",[e._v("test：增加或修改测试")]),e._v(" "),t("li",[e._v("chore: 改变构建流程、或者增加辅助工具、依赖库等")])]),e._v(" "),t("h2",{attrs:{id:"git-常用命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#git-常用命令"}},[e._v("#")]),e._v(" git 常用命令")]),e._v(" "),t("p",[t("strong",[e._v("1.  初始开发git操作")])]),e._v(" "),t("ul",[t("li",[t("code",[e._v("git clone 地址")]),e._v(": 克隆最新主分支项目代码")]),e._v(" "),t("li",[t("code",[e._v("git branch 分支名")]),e._v(":创建本地分支")]),e._v(" "),t("li",[t("code",[e._v("git branch")]),e._v(":查看本地分支")]),e._v(" "),t("li",[t("code",[e._v("git branch -a")]),e._v(":列出所有本地分支和远程分支")]),e._v(" "),t("li",[t("code",[e._v("git checkout 分支名")]),e._v(":切换分支")]),e._v(" "),t("li",[t("code",[e._v("git push <远程仓库> <本地分支>:<远程分支>")]),e._v(":将本地分支推送到远程分支")])]),e._v(" "),t("p",[t("strong",[e._v("2.  git fetch")])]),e._v(" "),t("p",[e._v("将远端所有分支和标签的变更都拉到本地")]),e._v(" "),t("p",[t("strong",[e._v("3.  git pull")])]),e._v(" "),t("p",[e._v("取回远程仓库的变化，并与本地分支合并( git pull = git fetch + git merge)")]),e._v(" "),t("p",[t("strong",[e._v("4.  git commit")])]),e._v(" "),t("p",[e._v("代码提交")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("git commit -m [message] :提交暂存区到仓库区\ngit commit --amend :使用一次新的commit，替代上一次提交,如果代码没有任何新变化，则用来改写上一次commit的提交信息\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br")])]),t("p",[t("strong",[e._v("5.  git push")])]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("git push origin tagname 推送某个标签到远程\ngit push origin --tags 一次性推送全部尚未推送到远程的本地标签\ngit push -d origin branchName 删除远程分支(--delete)\ngit push origin :refs/tags/<tagname> 删除远程标签<tagname>\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br")])]),e._v(" "),t("p",[t("strong",[e._v("6.  git merge")])]),e._v(" "),t("p",[e._v("git merge --no-ff branchName ：刻意制造分叉，保留合并分支的提交记录。")]),e._v(" "),t("p",[t("strong",[e._v("7.  git reset")])]),e._v(" "),t("p",[t("code",[e._v("git reset --hard HEAD")]),e._v(" 回退到上一个版本\n"),t("code",[e._v("git reset --hard commit_id")]),e._v(" 根据commit的ID（一般写6位以上就可以了），回退到指定版本")]),e._v(" "),t("p",[e._v("更多常用命令请"),t("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2015/12/git-cheat-sheet.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("参考阮一峰的博客"),t("OutboundLink")],1)]),e._v(" "),t("h2",{attrs:{id:"git-多人协作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#git-多人协作"}},[e._v("#")]),e._v(" git 多人协作")]),e._v(" "),t("h3",{attrs:{id:"_1、我们拿到一个git地址-首先进行代码clone"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1、我们拿到一个git地址-首先进行代码clone"}},[e._v("#")]),e._v(" 1、我们拿到一个git地址，首先进行代码clone")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("// 克隆仓库代码\ngit clone 'xxxxx'\n// 查看详情\ngit remote -v\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br")])]),t("h3",{attrs:{id:"_2、从develop建立功能分支"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2、从develop建立功能分支"}},[e._v("#")]),e._v(" 2、从develop建立功能分支")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("// 开发新功能时，请从develop建立分支\ngit checkout -b feature-* develop\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br")])]),t("p",[e._v("在多人协作时，大家都往master和dev分支推送代码，因此需要同步线上代码\n"),t("code",[e._v("git pull origin develop")]),e._v(" 获取远程仓库中develop分支上的commits，然后把origin/develop中的内容merge到你目前的分支中")]),e._v(" "),t("p",[e._v("然后在此分支上不断完善功能")]),e._v(" "),t("h3",{attrs:{id:"_3、直到功能开发完成"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3、直到功能开发完成"}},[e._v("#")]),e._v(" 3、直到功能开发完成")]),e._v(" "),t("p",[e._v("功能开发完成以后合并到develop，此处暂时假定合并代码不出现冲突")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("// 切换分支到develop\ngit checkout develop\n// 合并分支\ngit merge --no--ff feature-*\n// 删除分支\ngit branch -d feature-*\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br")])]),t("h3",{attrs:{id:"_4、代码合并"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4、代码合并"}},[e._v("#")]),e._v(" 4、代码合并")]),e._v(" "),t("p",[e._v("在功能完成后，因为我们是多人开发，所以咱们的分支是需要与主分支合并(merge)。")]),e._v(" "),t("p",[e._v("别的同事的任务完成了，早已推送到我们将要合并的develop分支上了")]),e._v(" "),t("p",[e._v("所以我们在push之前需要进行code merge ，将develop分支上的内容merge到我们当前的feature分支上")]),e._v(" "),t("p",[e._v("feature分支上已经将修改内容commit了 需要将develop分支的内容合并到当前分支，先切换分支到develop上，再获取一次更新")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("git checkout develop\ngit pull\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br")])]),t("p",[e._v("获取完更新后，再切换到我们的feature分支上，将develop的内容合并到我们的feature分支上")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("//切换分支\ngit chechout feature\n//合并某分支到当前分支\ngit merge develop\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br")])]),t("h3",{attrs:{id:"_5、解决冲突"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5、解决冲突"}},[e._v("#")]),e._v(" 5、解决冲突")]),e._v(" "),t("p",[e._v("执行"),t("code",[e._v("git merge develop")]),e._v("后，可能会遇到代码冲突，这时候我们可以解决冲突，将不需要内容删除即可（和一同开发的小伙伴商量好）")]),e._v(" "),t("p",[e._v("最后再执行"),t("code",[e._v("git push")]),e._v(" 即可。")]),e._v(" "),t("h2",{attrs:{id:"举例-将-dev-开发线-合并到-master"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#举例-将-dev-开发线-合并到-master"}},[e._v("#")]),e._v(" 举例 将 dev 开发线 合并到 master")]),e._v(" "),t("ul",[t("li",[e._v("1 确定你在dev线，将dev代码改动全部提交")]),e._v(" "),t("li",[e._v("2 切换master，确定是最新代码，不确定就pull下，选择合并分支，见上图")]),e._v(" "),t("li",[e._v("3 在下拉的提示框中选择dev线，然后选择提交所有代码")]),e._v(" "),t("li",[e._v("4 切回到dev 继续开发")])]),e._v(" "),t("p",[e._v("重点 merge命令的本质是从别的分支，将自身没有的提交记录拉取过来（粗略的说而已）。")]),e._v(" "),t("h2",{attrs:{id:"git提交忽略文件名称大小写问题解决"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#git提交忽略文件名称大小写问题解决"}},[e._v("#")]),e._v(" git提交忽略文件名称大小写问题解决")]),e._v(" "),t("p",[e._v("git在提交代码时，会忽略文件名称大小写，导致本地代码与远程代码不一致，此时可利用终端指令来检查下")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("git config --get core.ignorecase\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("true值则代表当前是忽略的，此时需要将当前项目提交设置为false")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("git config core.ignorecase false\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("blockquote",[t("p",[e._v("当前配置设置仅针对当前项目.git，其他项目需重新配置")])]),e._v(" "),t("h2",{attrs:{id:"防止git自动将源文件转换为crlf"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#防止git自动将源文件转换为crlf"}},[e._v("#")]),e._v(" 防止git自动将源文件转换为crlf")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("git config --global core.autocrlf false\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("h2",{attrs:{id:"git报错-failed-to-connect-to-github-com-port-443-解决方案"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#git报错-failed-to-connect-to-github-com-port-443-解决方案"}},[e._v("#")]),e._v(" Git报错： Failed to connect to github.com port 443 解决方案")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://blog.csdn.net/zpf1813763637/article/details/128340109",target:"_blank",rel:"noopener noreferrer"}},[e._v("Git报错： Failed to connect to github.com port 443 解决方案"),t("OutboundLink")],1)]),e._v(" "),t("h2",{attrs:{id:"git-learn"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#git-learn"}},[e._v("#")]),e._v(" git learn")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://oschina.gitee.io/learn-git-branching/",target:"_blank",rel:"noopener noreferrer"}},[t("OutboundLink")],1)]),e._v(" "),t("h2",{attrs:{id:"如何使功能分支feature追踪develop"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#如何使功能分支feature追踪develop"}},[e._v("#")]),e._v(" 如何使功能分支feature追踪develop")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("git branch --set-upstream-to=origin/develop feature\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("这将设置 feature 分支跟踪名为 origin/develop 的远程分支。这样，当你在 feature 分支上执行 git pull 或 git push 命令时，它们会自动与远程的 origin/develop 分支进行交互。")]),e._v(" "),t("p",[e._v("另一种方法是在创建 feature 分支时直接设置跟踪关系：")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("git checkout -b feature origin/develop\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("这将创建一个名为 feature 的本地分支，并将其设置为跟踪名为 origin/develop 的远程分支。")]),e._v(" "),t("p",[e._v("无论使用哪种方法，确保你的本地仓库已经克隆了远程仓库，并且远程仓库已经设置为名为 origin 的远程源。如果你的远程源名称不是 origin，请将上述命令中的 origin 替换为你的远程源名称。")]),e._v(" "),t("p",[t("strong",[e._v("查看追踪关系")])]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("git branch -vv\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("h2",{attrs:{id:"代码写错分支"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#代码写错分支"}},[e._v("#")]),e._v(" 代码写错分支")]),e._v(" "),t("p",[e._v("比如我的代码应该写在wzy分支上，但是我写到了xym这个分支，并且还提交了，怎么把代码移到wzy分支，并且撤回提交？")]),e._v(" "),t("p",[e._v("1、(xym)git reset HEAD^")]),e._v(" "),t("p",[e._v("2、(xym)git stash")]),e._v(" "),t("p",[e._v("3、切换到wzy")]),e._v(" "),t("p",[e._v("4、(wzy)git stash pop")]),e._v(" "),t("p",[e._v("5、(wzy)commit")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/595919748",target:"_blank",rel:"noopener noreferrer"}},[e._v("参考"),t("OutboundLink")],1)]),e._v(" "),t("h2",{attrs:{id:"git-删除远程和本地分支"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#git-删除远程和本地分支"}},[e._v("#")]),e._v(" git 删除远程和本地分支")]),e._v(" "),t("p",[t("strong",[e._v("删除本地分支")])]),e._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" branch "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-d")]),e._v(" xxxx\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[t("strong",[e._v("删除远程分支")])]),e._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" push origin "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-d")]),e._v(" xxxxx\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[t("strong",[e._v("清理远程分支")])]),e._v(" "),t("p",[e._v("在清理之前我们可以用如下命令来查看remote地址，远程分支，还有本地分支与之相对应关系等信息。")]),e._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" remote show origin\n\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br")])]),t("p",[e._v("然后进行清理")]),e._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" remote prune origin\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[t("a",{attrs:{href:"https://www.freesion.com/article/4532642129/",target:"_blank",rel:"noopener noreferrer"}},[e._v("WARNING DELETE "),t("code",[e._v("␍")]),e._v(" PRETTIER/PRETTIER（ESLINT配置的一些问题）"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("参考："),t("a",{attrs:{href:"https://juejin.im/post/5c67e70bf265da2de33f127c",target:"_blank",rel:"noopener noreferrer"}},[e._v("git 教程"),t("OutboundLink")],1),e._v("、"),t("a",{attrs:{href:"https://juejin.im/post/5ecb6b41f265da770d3dae6e",target:"_blank",rel:"noopener noreferrer"}},[e._v("使用Git进行多人协作开发"),t("OutboundLink")],1),e._v("、"),t("a",{attrs:{href:"https://www.liaoxuefeng.com/wiki/896043488029600/900375748016320",target:"_blank",rel:"noopener noreferrer"}},[e._v("廖雪峰：多人协作"),t("OutboundLink")],1),e._v("、"),t("a",{attrs:{href:"https://blog.csdn.net/qq_41732963/article/details/119942560",target:"_blank",rel:"noopener noreferrer"}},[e._v("vscode 本地分支合并远程分支，远程分支合并到本地分支"),t("OutboundLink")],1),e._v("、"),t("a",{attrs:{href:"https://www.cnblogs.com/chao8888/p/7803732.html#4-%E5%88%86%E6%94%AF%E7%AE%A1%E7%90%86",target:"_blank",rel:"noopener noreferrer"}},[e._v("开发中关于Git那些事\n"),t("OutboundLink")],1),e._v(" "),t("a",{attrs:{href:"https://blog.csdn.net/m0_61560468/article/details/131624036",target:"_blank",rel:"noopener noreferrer"}},[e._v("Git--多人协作开发"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"https://blog.csdn.net/qq_42688495/article/details/109538723",target:"_blank",rel:"noopener noreferrer"}},[e._v("Git操作详解以及在VScode中的使用"),t("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=r.exports}}]);